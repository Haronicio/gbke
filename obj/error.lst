                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module error
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _EMU_printf
                                     12 	.globl _raise_error
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area _DATA
                           000000    20 Ferror$who_error$0_0$0==.
      000000                         21 _who_error:
      000000                         22 	.ds 1
                           000001    23 Ferror$error_num$0_0$0==.
      000001                         24 _error_num:
      000001                         25 	.ds 1
                                     26 ;--------------------------------------------------------
                                     27 ; ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area _INITIALIZED
                           000000    30 Ferror$__EMU_PROFILER_INIT$0_0$0==.
      000000                         31 ___EMU_PROFILER_INIT:
      000000                         32 	.ds 2
                                     33 ;--------------------------------------------------------
                                     34 ; absolute external ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area _DABS (ABS)
                                     37 ;--------------------------------------------------------
                                     38 ; global & static initialisations
                                     39 ;--------------------------------------------------------
                                     40 	.area _HOME
                                     41 	.area _GSINIT
                                     42 	.area _GSFINAL
                                     43 	.area _GSINIT
                                     44 ;--------------------------------------------------------
                                     45 ; Home
                                     46 ;--------------------------------------------------------
                                     47 	.area _HOME
                                     48 	.area _HOME
                                     49 ;--------------------------------------------------------
                                     50 ; code
                                     51 ;--------------------------------------------------------
                                     52 	.area _CODE
                           000000    53 	G$raise_error$0$0	= .
                                     54 	.globl	G$raise_error$0$0
                           000000    55 	C$error.c$8$0_0$118	= .
                                     56 	.globl	C$error.c$8$0_0$118
                                     57 ;src/error.c:8: void raise_error(uint8_t error,uint8_t who,char * how)
                                     58 ;	---------------------------------
                                     59 ; Function raise_error
                                     60 ; ---------------------------------
      000000                         61 _raise_error::
      000000 4F               [ 4]   62 	ld	c, a
                           000001    63 	C$error.c$12$1_0$118	= .
                                     64 	.globl	C$error.c$12$1_0$118
                                     65 ;src/error.c:12: who_error = who;
      000001 21r00r00         [12]   66 	ld	hl, #_who_error
      000004 73               [ 8]   67 	ld	(hl), e
                           000005    68 	C$error.c$13$1_0$118	= .
                                     69 	.globl	C$error.c$13$1_0$118
                                     70 ;src/error.c:13: error_num = error;
      000005 21r01r00         [12]   71 	ld	hl, #_error_num
      000008 71               [ 8]   72 	ld	(hl), c
                           000009    73 	C$error.c$20$1_0$118	= .
                                     74 	.globl	C$error.c$20$1_0$118
                                     75 ;src/error.c:20: EMU_printf("%d raised %d : %s",who,error,how);
      000009 06 00            [ 8]   76 	ld	b, #0x00
      00000B 50               [ 4]   77 	ld	d, b
      00000C F8 02            [12]   78 	ldhl	sp,	#2
      00000E 2A               [ 8]   79 	ld	a, (hl+)
      00000F 66               [ 8]   80 	ld	h, (hl)
                                     81 ;	spillPairReg hl
                                     82 ;	spillPairReg hl
      000010 6F               [ 4]   83 	ld	l, a
                                     84 ;	spillPairReg hl
                                     85 ;	spillPairReg hl
      000011 E5               [16]   86 	push	hl
      000012 C5               [16]   87 	push	bc
      000013 D5               [16]   88 	push	de
      000014 11r20r00         [12]   89 	ld	de, #___str_0
      000017 D5               [16]   90 	push	de
      000018 CDr00r00         [24]   91 	call	_EMU_printf
      00001B E8 08            [16]   92 	add	sp, #8
                           00001D    93 	C$error.c$21$1_0$118	= .
                                     94 	.globl	C$error.c$21$1_0$118
                                     95 ;src/error.c:21: }
      00001D E1               [12]   96 	pop	hl
      00001E F1               [12]   97 	pop	af
      00001F E9               [ 4]   98 	jp	(hl)
                           000020    99 Ferror$__str_0$0_0$0 == .
      000020                        100 ___str_0:
      000020 25 64 20 72 61 69 73   101 	.ascii "%d raised %d : %s"
             65 64 20 25 64 20 3A
             20 25 73
      000031 00                     102 	.db 0x00
                                    103 	.area _CODE
                                    104 	.area _INITIALIZER
                           000000   105 Ferror$__xinit___EMU_PROFILER_INIT$0_0$0 == .
      000000                        106 __xinit____EMU_PROFILER_INIT:
      000000r00r00                  107 	.dw _EMU_profiler_message
                                    108 	.area _CABS (ABS)
